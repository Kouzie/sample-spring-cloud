spring.application.name=eureka-server
server.port=${PORT:8761}
eureka.instance.metadata-map.zone=${ZONE:zone1}
eureka.client.service-url.defaultZone=http://admin:qwer@localhost:8761/eureka/
eureka.client.prefer-same-zone-eureka=true
# 유레가 서버의 보호모드를 off해 90초동안 인스턴스 유지를 없애고 eviction-interval-timer 기본값인 60초 동안기다리도록 설정
eureka.server.enable-self-preservation=false
# 60초가 너무 길기때문에 3초로 설정
eureka.server.eviction-interval-timer-in-ms=3000
# client 하트비드는 1초마다 도착하고 2초가 지나면 클라이언트의 서비스 지원을 중지하고 하트비트가 오지 않고 3초가 지나면 서비스를 퇴거(삭제)한다

# https://stackoverflow.com/questions/50971891/how-to-secure-spring-cloud-eureka-service-with-basic-auth 나중에 시큐리티 설정해보자
spring.security.user.name=admin-eureka
spring.security.user.password=1234

# 등록 이후 Instance 정보가 변경 되었을 때 Registry 정보를 갱신하기 위한 REST를 2초마다 호출
eureka.client.instance-info-replication-interval-seconds=2

# cloud config를 서버 설정시 등록해도 되지만 유레카 서버는 어쩔수 없이 설정을 별도로 하고 config서버를 유레카 클라이언트로 등록하는 것도 방법이다.
#spring.cloud.config.uri=http://localhost:8889
# application name + profile active => server-peer1 을 cloud config에서 찾아 지정한다.

eureka.client.fetch-registry=false
eureka.client.register-with-eureka=false

